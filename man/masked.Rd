% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/masked.R
\name{masked}
\alias{masked}
\alias{unmask}
\title{Create a masked atomic vector}
\usage{
masked(data = numeric(), mask = logical())

unmask(masked)
}
\arguments{
\item{data}{An atomic vector to mask values from. Lists and data frames are
not supported.}

\item{mask}{A logical vector that indicates which values of \code{data} to mask.}
}
\value{
A masked vector.
}
\description{
Masked vectors contain a base R data type that can be used in calculations,
but is not revealed by default on the console or when converted to a
character. This can be useful for preventing publication of small cells, such
as in official statistics.
}
\section{Pretty printing and conversion to character}{


Masked vectors have pretty printing that replaces masked values of a vector
with \code{n.p.} in the console (customisable with \code{options(maskr.replacement = ...)}).

Converting a masked vector to character results in masked vectors being
replaced with \code{n.p.}, or its alternative in
\code{getOption('maskr.replacement')}.

Masked vectors cannot be converted to their raw types, to prevent
accidental release of data. Instead, use \code{\link[=unmask]{unmask()}} to explicitly unmask a
vector.
}

\section{Arithmetic}{


Elementwise arithmetic operators have been implemented in masked vectors.
The resulting data will be as if performing the operation on the unmasked
vectors. Mask flags are sticky; the result of any operation involving a
masked value will also be masked.
}

\examples{
# Mask integers in a vector strictly between 0 and 5
x <- 0:8
masked(x, 0L < x & x < 5L)

# Mask vowels in the alphabet
masked(letters, letters \%in\% c('a', 'e', 'i', 'o', 'u'))

# Mask doubles...
sepals <- head(masked(iris$Sepal.Length, iris$Sepal.Length > 5))
sepals
# ...and get back the underlying values
unmask(sepals)

# Use a different mask character
op <- options(maskr.replacement = '*')
sepals
options(op)
}
